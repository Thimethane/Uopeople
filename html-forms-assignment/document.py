{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "87a2f27a-b105-4ca8-9431-54768b1bb551",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'HTML_Form_Assignment' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[2], line 172\u001b[0m\n\u001b[0;32m    167\u001b[0m doc\u001b[38;5;241m.\u001b[39madd_paragraph(\n\u001b[0;32m    168\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mW3Schools. (n.d.). HTML Tutorial. Retrieved from https://www.w3schools.com/html/default.asp\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    169\u001b[0m )\n\u001b[0;32m    171\u001b[0m \u001b[38;5;66;03m# Save the document\u001b[39;00m\n\u001b[1;32m--> 172\u001b[0m doc\u001b[38;5;241m.\u001b[39msave(HTML_Form_Assignment\u001b[38;5;241m.\u001b[39mdocx)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'HTML_Form_Assignment' is not defined"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1d273166-8db7-4612-b45d-27fcf9578650",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "ename": "PermissionError",
     "evalue": "[Errno 13] Permission denied: '/HTML_Form_Assignment.docx'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mPermissionError\u001b[0m                           Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[4], line 173\u001b[0m\n\u001b[0;32m    171\u001b[0m \u001b[38;5;66;03m# Save the document\u001b[39;00m\n\u001b[0;32m    172\u001b[0m file_path \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m/HTML_Form_Assignment.docx\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m--> 173\u001b[0m doc\u001b[38;5;241m.\u001b[39msave(file_path)\n\u001b[0;32m    175\u001b[0m file_path\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\docx\\document.py:151\u001b[0m, in \u001b[0;36mDocument.save\u001b[1;34m(self, path_or_stream)\u001b[0m\n\u001b[0;32m    145\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21msave\u001b[39m(\u001b[38;5;28mself\u001b[39m, path_or_stream: \u001b[38;5;28mstr\u001b[39m \u001b[38;5;241m|\u001b[39m IO[\u001b[38;5;28mbytes\u001b[39m]):\n\u001b[0;32m    146\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"Save this document to `path_or_stream`.\u001b[39;00m\n\u001b[0;32m    147\u001b[0m \n\u001b[0;32m    148\u001b[0m \u001b[38;5;124;03m    `path_or_stream` can be either a path to a filesystem location (a string) or a\u001b[39;00m\n\u001b[0;32m    149\u001b[0m \u001b[38;5;124;03m    file-like object.\u001b[39;00m\n\u001b[0;32m    150\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[1;32m--> 151\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_part\u001b[38;5;241m.\u001b[39msave(path_or_stream)\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\docx\\parts\\document.py:106\u001b[0m, in \u001b[0;36mDocumentPart.save\u001b[1;34m(self, path_or_stream)\u001b[0m\n\u001b[0;32m    103\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21msave\u001b[39m(\u001b[38;5;28mself\u001b[39m, path_or_stream):\n\u001b[0;32m    104\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"Save this document to `path_or_stream`, which can be either a path to a\u001b[39;00m\n\u001b[0;32m    105\u001b[0m \u001b[38;5;124;03m    filesystem location (a string) or a file-like object.\"\"\"\u001b[39;00m\n\u001b[1;32m--> 106\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mpackage\u001b[38;5;241m.\u001b[39msave(path_or_stream)\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\docx\\opc\\package.py:151\u001b[0m, in \u001b[0;36mOpcPackage.save\u001b[1;34m(self, pkg_file)\u001b[0m\n\u001b[0;32m    149\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m part \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mparts:\n\u001b[0;32m    150\u001b[0m     part\u001b[38;5;241m.\u001b[39mbefore_marshal()\n\u001b[1;32m--> 151\u001b[0m PackageWriter\u001b[38;5;241m.\u001b[39mwrite(pkg_file, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mrels, \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mparts)\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\docx\\opc\\pkgwriter.py:27\u001b[0m, in \u001b[0;36mPackageWriter.write\u001b[1;34m(pkg_file, pkg_rels, parts)\u001b[0m\n\u001b[0;32m     23\u001b[0m \u001b[38;5;129m@staticmethod\u001b[39m\n\u001b[0;32m     24\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mwrite\u001b[39m(pkg_file, pkg_rels, parts):\n\u001b[0;32m     25\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"Write a physical package (.pptx file) to `pkg_file` containing `pkg_rels` and\u001b[39;00m\n\u001b[0;32m     26\u001b[0m \u001b[38;5;124;03m    `parts` and a content types stream based on the content types of the parts.\"\"\"\u001b[39;00m\n\u001b[1;32m---> 27\u001b[0m     phys_writer \u001b[38;5;241m=\u001b[39m PhysPkgWriter(pkg_file)\n\u001b[0;32m     28\u001b[0m     PackageWriter\u001b[38;5;241m.\u001b[39m_write_content_types_stream(phys_writer, parts)\n\u001b[0;32m     29\u001b[0m     PackageWriter\u001b[38;5;241m.\u001b[39m_write_pkg_rels(phys_writer, pkg_rels)\n",
      "File \u001b[1;32m~\\AppData\\Roaming\\Python\\Python311\\site-packages\\docx\\opc\\phys_pkg.py:109\u001b[0m, in \u001b[0;36m_ZipPkgWriter.__init__\u001b[1;34m(self, pkg_file)\u001b[0m\n\u001b[0;32m    107\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m__init__\u001b[39m(\u001b[38;5;28mself\u001b[39m, pkg_file):\n\u001b[0;32m    108\u001b[0m     \u001b[38;5;28msuper\u001b[39m(_ZipPkgWriter, \u001b[38;5;28mself\u001b[39m)\u001b[38;5;241m.\u001b[39m\u001b[38;5;21m__init__\u001b[39m()\n\u001b[1;32m--> 109\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_zipf \u001b[38;5;241m=\u001b[39m ZipFile(pkg_file, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mw\u001b[39m\u001b[38;5;124m\"\u001b[39m, compression\u001b[38;5;241m=\u001b[39mZIP_DEFLATED)\n",
      "File \u001b[1;32mC:\\ProgramData\\anaconda3\\Lib\\zipfile.py:1284\u001b[0m, in \u001b[0;36mZipFile.__init__\u001b[1;34m(self, file, mode, compression, allowZip64, compresslevel, strict_timestamps, metadata_encoding)\u001b[0m\n\u001b[0;32m   1282\u001b[0m \u001b[38;5;28;01mwhile\u001b[39;00m \u001b[38;5;28;01mTrue\u001b[39;00m:\n\u001b[0;32m   1283\u001b[0m     \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m-> 1284\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mfp \u001b[38;5;241m=\u001b[39m io\u001b[38;5;241m.\u001b[39mopen(file, filemode)\n\u001b[0;32m   1285\u001b[0m     \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mOSError\u001b[39;00m:\n\u001b[0;32m   1286\u001b[0m         \u001b[38;5;28;01mif\u001b[39;00m filemode \u001b[38;5;129;01min\u001b[39;00m modeDict:\n",
      "\u001b[1;31mPermissionError\u001b[0m: [Errno 13] Permission denied: '/HTML_Form_Assignment.docx'"
     ]
    }
   ],
   "source": [
    "from docx import Document\n",
    "\n",
    "# Create a new Document\n",
    "doc = Document()\n",
    "\n",
    "# Title of the document\n",
    "doc.add_heading('Assignment: HTML Form Controls and Methods', 0)\n",
    "\n",
    "# Adding the first section: A. Creating Two Different Forms Using GET and POST Methods\n",
    "doc.add_heading('A. Creating Two Different Forms Using GET and POST Methods', level=1)\n",
    "\n",
    "# Section 1: GET Method Form\n",
    "doc.add_heading('1. Form Using the GET Method', level=2)\n",
    "doc.add_paragraph(\n",
    "    \"The GET method sends form data as part of the URL. It's useful for non-sensitive data such as search \"\n",
    "    \"queries but has limitations in terms of data size and security. The data is visible in the URL, which can be accessed by anyone.\"\n",
    ")\n",
    "doc.add_paragraph(\"Example Code:\")\n",
    "doc.add_paragraph(\"\"\"\n",
    "<!DOCTYPE html>\n",
    "<html lang=\"en\">\n",
    "<head>\n",
    "    <meta charset=\"UTF-8\">\n",
    "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n",
    "    <title>GET Method Form</title>\n",
    "</head>\n",
    "<body>\n",
    "\n",
    "<h2>GET Method Form</h2>\n",
    "\n",
    "<form action=\"get_form_output.php\" method=\"GET\">\n",
    "  <label for=\"name\">Name:</label><br>\n",
    "  <input type=\"text\" id=\"name\" name=\"name\"><br><br>\n",
    "  <label for=\"email\">Email:</label><br>\n",
    "  <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n",
    "  <input type=\"submit\" value=\"Submit\">\n",
    "</form>\n",
    "\n",
    "</body>\n",
    "</html>\n",
    "\"\"\")\n",
    "\n",
    "# Section 2: POST Method Form\n",
    "doc.add_heading('2. Form Using the POST Method', level=2)\n",
    "doc.add_paragraph(\n",
    "    \"The POST method sends form data as part of the HTTP request body. This method is more secure and allows \"\n",
    "    \"for larger amounts of data. Unlike GET, the data is not visible in the URL, making it more suitable for sensitive information.\"\n",
    ")\n",
    "doc.add_paragraph(\"Example Code:\")\n",
    "doc.add_paragraph(\"\"\"\n",
    "<!DOCTYPE html>\n",
    "<html lang=\"en\">\n",
    "<head>\n",
    "    <meta charset=\"UTF-8\">\n",
    "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n",
    "    <title>POST Method Form</title>\n",
    "</head>\n",
    "<body>\n",
    "\n",
    "<h2>POST Method Form</h2>\n",
    "\n",
    "<form action=\"post_form_output.php\" method=\"POST\">\n",
    "  <label for=\"name\">Name:</label><br>\n",
    "  <input type=\"text\" id=\"name\" name=\"name\"><br><br>\n",
    "  <label for=\"email\">Email:</label><br>\n",
    "  <input type=\"email\" id=\"email\" name=\"email\"><br><br>\n",
    "  <input type=\"submit\" value=\"Submit\">\n",
    "</form>\n",
    "\n",
    "</body>\n",
    "</html>\n",
    "\"\"\")\n",
    "\n",
    "# Section on Differences in Outputs from GET and POST Methods\n",
    "doc.add_heading('Differences in Outputs from GET and POST Methods', level=2)\n",
    "doc.add_paragraph(\n",
    "    \"GET Method: Data is appended to the URL, visible in the browser’s address bar. It is suitable for simple queries, \"\n",
    "    \"like search inputs (W3Schools, n.d.).\"\n",
    ")\n",
    "doc.add_paragraph(\n",
    "    \"POST Method: Data is sent in the request body, not visible in the address bar. It is more secure and allows for sending \"\n",
    "    \"large amounts of data, suitable for form submissions like login and registration (W3Schools, n.d.).\"\n",
    ")\n",
    "\n",
    "# Section B: Choosing the Best Form Control Elements\n",
    "doc.add_heading('B. Choosing the Best Form Control Elements', level=1)\n",
    "\n",
    "# Item 1: Marital Status\n",
    "doc.add_heading('1. Choose Your Marital Status: Single, Married, Widow, Prefer Not to Say', level=2)\n",
    "doc.add_paragraph(\n",
    "    \"Form Control: <select> with <option>\\n\"\n",
    "    \"Reason: The <select> element is ideal for choosing from a set of predefined options. It’s easy to use when there are \"\n",
    "    \"multiple options to choose from (W3Schools, n.d.).\"\n",
    ")\n",
    "doc.add_paragraph(\"Sample Code:\")\n",
    "doc.add_paragraph(\"\"\"\n",
    "<label for=\"marital-status\">Marital Status:</label>\n",
    "<select id=\"marital-status\" name=\"marital-status\">\n",
    "  <option value=\"single\">Single</option>\n",
    "  <option value=\"married\">Married</option>\n",
    "  <option value=\"widow\">Widow</option>\n",
    "  <option value=\"prefer-not-to-say\">Prefer Not to Say</option>\n",
    "</select>\n",
    "\"\"\")\n",
    "\n",
    "# Item 2: Medical History of Diabetes\n",
    "doc.add_heading('2. Indicate Whether You Have a Medical History of Diabetes (Yes or No)', level=2)\n",
    "doc.add_paragraph(\n",
    "    \"Form Control: <input type=\\\"radio\\\">\\n\"\n",
    "    \"Reason: A radio button is appropriate for selecting between two options (Yes or No) and ensures only one option can be selected (W3Schools, n.d.).\"\n",
    ")\n",
    "doc.add_paragraph(\"Sample Code:\")\n",
    "doc.add_paragraph(\"\"\"\n",
    "<label for=\"diabetes\">Do you have a medical history of diabetes?</label><br>\n",
    "<input type=\"radio\" id=\"yes\" name=\"diabetes\" value=\"yes\">\n",
    "<label for=\"yes\">Yes</label><br>\n",
    "<input type=\"radio\" id=\"no\" name=\"diabetes\" value=\"no\">\n",
    "<label for=\"no\">No</label><br>\n",
    "\"\"\")\n",
    "\n",
    "# Item 3: Feedback for a Food Delivery Service\n",
    "doc.add_heading('3. Write Feedback for a Food Delivery Service', level=2)\n",
    "doc.add_paragraph(\n",
    "    \"Form Control: <textarea>\\n\"\n",
    "    \"Reason: A <textarea> allows the user to input multi-line text, making it suitable for feedback or comments (W3Schools, n.d.).\"\n",
    ")\n",
    "doc.add_paragraph(\"Sample Code:\")\n",
    "doc.add_paragraph(\"\"\"\n",
    "<label for=\"feedback\">Feedback:</label><br>\n",
    "<textarea id=\"feedback\" name=\"feedback\" rows=\"4\" cols=\"50\">\n",
    "  Write your feedback here...\n",
    "</textarea>\n",
    "\"\"\")\n",
    "\n",
    "# Item 4: Favorite Sport Selection\n",
    "doc.add_heading('4. Select Your Favorite Sport from a List of Eight Sports', level=2)\n",
    "doc.add_paragraph(\n",
    "    \"Form Control: <select> with <option>\\n\"\n",
    "    \"Reason: The <select> dropdown is appropriate when there are multiple options (sports) to choose from. It saves space and presents the options clearly (W3Schools, n.d.).\"\n",
    ")\n",
    "doc.add_paragraph(\"Sample Code:\")\n",
    "doc.add_paragraph(\"\"\"\n",
    "<label for=\"sport\">Favorite Sport:</label>\n",
    "<select id=\"sport\" name=\"sport\">\n",
    "  <option value=\"soccer\">Soccer</option>\n",
    "  <option value=\"basketball\">Basketball</option>\n",
    "  <option value=\"baseball\">Baseball</option>\n",
    "  <option value=\"tennis\">Tennis</option>\n",
    "  <option value=\"rugby\">Rugby</option>\n",
    "  <option value=\"cricket\">Cricket</option>\n",
    "  <option value=\"hockey\">Hockey</option>\n",
    "  <option value=\"volleyball\">Volleyball</option>\n",
    "</select>\n",
    "\"\"\")\n",
    "\n",
    "# Submission Guidelines Section\n",
    "doc.add_heading('HTML Form Assignment', 0)\n",
    "doc.add_paragraph(\n",
    "    \"• File Names: Ensure you save the HTML files as get_form.html and post_form.html (or another naming convention if preferred).\\n\"\n",
    "    \"• Code: Copy and paste your code into the document.\\n\"\n",
    "    \"• Screenshots: Take screenshots of the output pages for both GET and POST methods, showing how the data is displayed (in the URL for GET and in the form submission for POST).\\n\"\n",
    "    \"• Description: Provide a short description of each form's purpose and the method used.\"\n",
    ")\n",
    "\n",
    "# References Section\n",
    "doc.add_heading('References', level=1)\n",
    "doc.add_paragraph(\n",
    "    \"W3Schools. (n.d.). HTML Tutorial. Retrieved from https://www.w3schools.com/html/default.asp\"\n",
    ")\n",
    "\n",
    "file_path = \"HTML_Form_Assignment.docx\"  # Adjust the path as necessary\n",
    "doc.save(file_path)\n",
    "\n",
    "file_path\n",
    "\n",
    "from docx import Document\n",
    "\n",
    "# Create a new document\n",
    "doc = Document()\n",
    "\n",
    "# Add content to the document (example)\n",
    "doc.add_heading()\n",
    "doc.add_paragraph('This document contains the HTML forms and improvements discussed.')\n",
    "\n",
    "# Save the document with a proper path\n",
    "file_path = \"HTML_Form_Assignment.docx\"  # Adjust the path as necessary\n",
    "doc.save(file_path)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "261d6772-6818-481f-9ada-ce23ad42be10",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
